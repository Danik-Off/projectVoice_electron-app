import React, { useEffect, useState } from 'react';
import { ElectronAPI } from '../types/electron';

interface ElectronIntegrationProps {
  children: React.ReactNode;
}

const ElectronIntegration: React.FC<ElectronIntegrationProps> = ({ children }) => {
  const [isElectron, setIsElectron] = useState(false);
  const [electronAPI, setElectronAPI] = useState<ElectronAPI | null>(null);
  const [appVersion, setAppVersion] = useState<string>('');

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Electron
    const checkElectron = () => {
      if (window.electronAPI) {
        setIsElectron(true);
        setElectronAPI(window.electronAPI);
        
        // –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        window.electronAPI.getVersion().then(version => {
          setAppVersion(version);
        }).catch(console.error);
      }
    };

    checkElectron();

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –º–µ–Ω—é
    if (window.electronAPI) {
      window.electronAPI.onMenuAction((action) => {
        console.log('Menu action received:', action);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –º–µ–Ω—é
        switch (action) {
          case 'menu-new-server':
            // –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
            break;
          case 'menu-join-server':
            // –õ–æ–≥–∏–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
            break;
          case 'menu-about':
            // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
            alert(`ProjectVoice Desktop v${appVersion}`);
            break;
        }
      });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    const handleResize = () => {
      if (window.electronAPI) {
        // –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–º–µ—Ä–µ –≤ –≥–ª–∞–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
        console.log('Window resized:', window.innerWidth, window.innerHeight);
      }
    };

    window.addEventListener('resize', handleResize);

    return () => {
      window.removeEventListener('resize', handleResize);
      if (window.electronAPI) {
        window.electronAPI.removeAllListeners('menu-action');
      }
    };
  }, [appVersion]);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Electron
  if (isElectron) {
    return (
      <div className="electron-app">
        {children}
        <div className="electron-indicator">
          <span>üñ•Ô∏è Desktop v{appVersion}</span>
        </div>
      </div>
    );
  }

  return <>{children}</>;
};

export default ElectronIntegration;
