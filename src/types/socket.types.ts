export enum SocketClientState {
    INIT = 'init',
    CONNECTING = 'connecting',
    CONNECTED = 'connected',
    DISCONNECTED = 'disconnected',
    ERROR = 'error',
    RECONNECTING = 'reconnecting',
    MEDIA_INITIALIZING = 'media_initializing',
    MEDIA_INITIALIZED = 'media_initialized',
    MEDIA_ERROR = 'media_error',
    PEER_CONNECTION_CREATING = 'peer_connection_creating',
    PEER_CONNECTION_ESTABLISHED = 'peer_connection_established',
    PEER_CONNECTION_CLOSED = 'peer_connection_closed',
    SIGNALING_ERROR = 'signaling_error',
}
export const stateMessages: { [key in SocketClientState]: string } = {
    [SocketClientState.INIT]: 'Состояние инициализировано.',
    [SocketClientState.CONNECTING]: 'Соединение устанавливается...',
    [SocketClientState.CONNECTED]: 'Соединение установлено.',
    [SocketClientState.DISCONNECTED]: 'Соединение разорвано.',
    [SocketClientState.ERROR]: 'Произошла ошибка соединения.',
    [SocketClientState.RECONNECTING]: 'Пытаемся восстановить соединение...',
    [SocketClientState.MEDIA_INITIALIZING]: 'Инициализация медиа...',
    [SocketClientState.MEDIA_INITIALIZED]: 'Медиа инициализировано.',
    [SocketClientState.MEDIA_ERROR]: 'Ошибка инициализации медиа.',
    [SocketClientState.PEER_CONNECTION_CREATING]: 'Создание соединения с пользователем...',
    [SocketClientState.PEER_CONNECTION_ESTABLISHED]: 'Соединение с пользователем установлено.',
    [SocketClientState.PEER_CONNECTION_CLOSED]: 'Соединение с пользователем закрыто.',
    [SocketClientState.SIGNALING_ERROR]: 'Ошибка сигнальной связи.',
};
