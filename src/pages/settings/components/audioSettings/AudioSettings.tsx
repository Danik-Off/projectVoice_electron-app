import React, { useState } from 'react';
import { useTranslation } from 'react-i18next';
import { observer } from 'mobx-react-lite';
import audioSettingsStore from '../../../../store/AudioSettingsStore';
import './audioSettings.scss';

const AudioSettings: React.FC = observer(() => {
    const { t } = useTranslation();
    const [activeSection, setActiveSection] = useState<'devices' | 'quality' | 'advanced'>('devices');
    const [isChangingMicrophone, setIsChangingMicrophone] = useState(false);

    const handleMicrophoneChange = async (deviceId: string) => {
        if (deviceId && deviceId !== audioSettingsStore.selectedMicrophone?.deviceId) {
            setIsChangingMicrophone(true);
            try {
                await audioSettingsStore.setMicrophone(deviceId);
            } catch (error) {
                console.error('Error changing microphone:', error);
            } finally {
                setIsChangingMicrophone(false);
            }
        }
    };

    return (
        <div className="settings-section">
            <div className="section-header">
                <h2>{t('settingsPage.audio.title')}</h2>
                <p>{t('settingsPage.audio.description')}</p>
            </div>

            <div className="section-content">
                {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º */}
                <div className="settings-tabs">
                    <button
                        className={`tab-button ${activeSection === 'devices' ? 'active' : ''}`}
                        onClick={() => setActiveSection('devices')}
                    >
                        üé§ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
                    </button>
                    <button
                        className={`tab-button ${activeSection === 'quality' ? 'active' : ''}`}
                        onClick={() => setActiveSection('quality')}
                    >
                        üéµ –ö–∞—á–µ—Å—Ç–≤–æ
                    </button>
                    <button
                        className={`tab-button ${activeSection === 'advanced' ? 'active' : ''}`}
                        onClick={() => setActiveSection('advanced')}
                    >
                        üéõÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞
                    </button>
                </div>

                {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞–∑–¥–µ–ª–æ–≤ */}
                {activeSection === 'devices' && (
                    <div className="settings-card">
                        <div className="card-header">
                            <div className="header-content">
                                <div className="icon-container">üé§</div>
                                <div className="header-text">
                                    <h3>–ê—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</h3>
                                    <p>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω –∏ –¥–∏–Ω–∞–º–∏–∫–∏ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –≤—ã–∑–æ–≤–æ–≤</p>
                                </div>
                            </div>
                        </div>
                        <div className="card-content">
                    <div className="settings-grid two-columns">
                                {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ */}
                                <div className="device-section">
                                    <div className="device-header">
                                        <div className="device-icon">üé§</div>
                                        <h4>–ú–∏–∫—Ä–æ—Ñ–æ–Ω</h4>
                                    </div>
                                    
                                    <div className="setting-group">
                                        <label className="setting-label">
                                            <span>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∏</span>
                                            <span className="setting-description">
                                                {isChangingMicrophone ? '–ú–µ–Ω—è–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω...' : '–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞'}
                                            </span>
                                        </label>
                                        <div className="setting-control">
                                            <select
                                                value={audioSettingsStore.selectedMicrophone?.deviceId || ''}
                                                onChange={(e) => handleMicrophoneChange(e.target.value)}
                                                className="device-select"
                                                disabled={isChangingMicrophone}
                                            >
                                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω</option>
                                                {audioSettingsStore.microphoneDevices.map((device) => (
                                                    <option key={device.deviceId} value={device.deviceId}>
                                                        {device.label || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ'}
                                                    </option>
                                                ))}
                                            </select>
                                        </div>
                                    </div>

                                    <div className="setting-group">
                                        <label className="setting-label">
                                            <span>–ì—Ä–æ–º–∫–æ—Å—Ç—å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞</span>
                                            <span className="setting-description">–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –∑–∞–ø–∏—Å–∏</span>
                                        </label>
                                        <div className="setting-control">
                                            <div className="slider-group">
                                                <div className="slider-item">
                                                    <input
                                                        type="range"
                                                        min="0"
                                                        max="100"
                                                        value={audioSettingsStore.volume}
                                                        onChange={(e) => audioSettingsStore.setVolume(Number(e.target.value))}
                                                        className="settings-slider"
                                                    />
                                                    <span className="slider-value">{audioSettingsStore.volume}%</span>
                                                    <span className="slider-description">–£—Ä–æ–≤–µ–Ω—å –∑–∞–ø–∏—Å–∏ –∑–≤—É–∫–∞</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div className="setting-group">
                                        <label className="setting-label">
                                            <span>–ö–∞–Ω–∞–ª –∑–∞–ø–∏—Å–∏</span>
                                            <span className="setting-description">–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤</span>
                                        </label>
                                        <div className="setting-control">
                                            <div className="radio-group">
                                                <label className="radio-item">
                                                    <input
                                                        type="radio"
                                                        name="channel"
                                                        value="mono"
                                                        checked={audioSettingsStore.channelCount === 1}
                                                        onChange={() => audioSettingsStore.setChannelCount('mono')}
                                                    />
                                                    <span>–ú–æ–Ω–æ (1 –∫–∞–Ω–∞–ª)</span>
                                                </label>
                                                <label className="radio-item">
                                                    <input
                                                        type="radio"
                                                        name="channel"
                                                        value="stereo"
                                                        checked={audioSettingsStore.channelCount === 2}
                                                        onChange={() => audioSettingsStore.setChannelCount('stereo')}
                                                    />
                                                    <span>–°—Ç–µ—Ä–µ–æ (2 –∫–∞–Ω–∞–ª–∞)</span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div className="setting-group">
                                        <label className="setting-label">
                                            <span>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
                                            <span className="setting-description">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞</span>
                                        </label>
                                        <div className="setting-control">
                                            <button 
                                                className="settings-button settings-button--test"
                                                onClick={() => audioSettingsStore.testMicrophone()}
                                            >
                                                üé§ –¢–µ—Å—Ç –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–Ω–∞–º–∏–∫–æ–≤ */}
                                <div className="device-section">
                                    <div className="device-header">
                                        <div className="device-icon">üîä</div>
                                        <h4>–î–∏–Ω–∞–º–∏–∫–∏</h4>
                                    </div>
                                    
                                    <div className="setting-group">
                                        <label className="setting-label">
                                            <span>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è</span>
                                            <span className="setting-description">–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–Ω–∞–º–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è</span>
                                        </label>
                                        <div className="setting-control">
                                            <select
                                                value={audioSettingsStore.selectedSpeaker?.deviceId || ''}
                                                onChange={(e) => audioSettingsStore.setSpeaker(e.target.value)}
                                                className="device-select"
                                            >
                                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</option>
                                                {audioSettingsStore.speakerDevices.map((device) => (
                                                    <option key={device.deviceId} value={device.deviceId}>
                                                        {device.label || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ'}
                                                    </option>
                                                ))}
                                            </select>
                                        </div>
                                    </div>

                                    <div className="setting-group">
                                        <label className="setting-label">
                                            <span>–°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–≤—É–∫–∞</span>
                                            <span className="setting-description">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º</span>
                                        </label>
                                        <div className="setting-control">
                                            <div className="checkbox-group">
                                                <label className="checkbox-label">
                                                    <input
                                                        type="checkbox"
                                                        checked={!audioSettingsStore.isSpeakerMuted}
                                                        onChange={() => audioSettingsStore.toggleSpeakerMute()}
                                                    />
                                                    <span>–í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫</span>
                                                    <span className="checkbox-description">–†–∞–∑—Ä–µ—à–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞</span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div className="setting-group">
                                        <label className="setting-label">
                                            <span>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
                                            <span className="setting-description">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –¥–∏–Ω–∞–º–∏–∫–æ–≤</span>
                                        </label>
                                        <div className="setting-control">
                                            <button 
                                                className="settings-button settings-button--test"
                                                onClick={() => audioSettingsStore.testSpeakers()}
                                            >
                                                üîä –¢–µ—Å—Ç –¥–∏–Ω–∞–º–∏–∫–æ–≤
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                )}

                {activeSection === 'quality' && (
                    <div className="settings-card">
                        <div className="card-header">
                            <div className="header-content">
                                <div className="icon-container">üéµ</div>
                                <div className="header-text">
                                    <h3>–ö–∞—á–µ—Å—Ç–≤–æ –∑–≤—É–∫–∞</h3>
                                    <p>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∑–≤—É–∫–∞ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã</p>
                                </div>
                            </div>
                        </div>
                        <div className="card-content">
                            {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ */}
                            <div className="setting-group">
                                <label className="setting-label">
                                    <span>–†–µ–∂–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–∫</span>
                                    <span className="setting-description">–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫</span>
                                </label>
                                <div className="setting-control">
                                    <div className="mode-switcher">
                                        <button 
                                            className={`mode-btn ${audioSettingsStore.settingsMode === 'simple' ? 'active' : ''}`}
                                            onClick={() => audioSettingsStore.setSettingsMode('simple')}
                                        >
                                            –ü—Ä–æ—Å—Ç–æ–π
                                        </button>
                                        <button 
                                            className={`mode-btn ${audioSettingsStore.settingsMode === 'detailed' ? 'active' : ''}`}
                                            onClick={() => audioSettingsStore.setSettingsMode('detailed')}
                                        >
                                            –î–µ—Ç–∞–ª—å–Ω—ã–π
                                        </button>
                                    </div>
                                </div>
                            </div>

                            {/* –ü—Ä–æ—Å—Ç–æ–π —Ä–µ–∂–∏–º */}
                            {audioSettingsStore.settingsMode === 'simple' && (
                                <div className="setting-group">
                                    <label className="setting-label">
                                        <span>–ö–∞—á–µ—Å—Ç–≤–æ –∑–≤—É–∫–∞</span>
                                        <span className="setting-description">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∫–∞—á–µ—Å—Ç–≤–∞ –¥–ª—è –≤–∞—à–µ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è</span>
                                    </label>
                                    <div className="setting-control">
                                        <div className="quality-selector">
                                            <button 
                                                className={`quality-btn ${audioSettingsStore.audioQuality === 'low' ? 'active' : ''}`}
                                                onClick={() => audioSettingsStore.setAudioQuality('low')}
                                            >
                                                <div className="quality-title">–ù–∏–∑–∫–æ–µ</div>
                                                <div className="quality-desc">–≠–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞, –±–∞–∑–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞</div>
                                                <div className="quality-specs">16 –∫–ì—Ü, 64 kbps, 200 –º—Å</div>
                                            </button>
                                            <button 
                                                className={`quality-btn ${audioSettingsStore.audioQuality === 'medium' ? 'active' : ''}`}
                                                onClick={() => audioSettingsStore.setAudioQuality('medium')}
                                            >
                                                <div className="quality-title">–°—Ä–µ–¥–Ω–µ–µ</div>
                                                <div className="quality-desc">–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</div>
                                                <div className="quality-specs">24 –∫–ì—Ü, 128 kbps, 150 –º—Å</div>
                                            </button>
                                            <button 
                                                className={`quality-btn ${audioSettingsStore.audioQuality === 'high' ? 'active' : ''}`}
                                                onClick={() => audioSettingsStore.setAudioQuality('high')}
                                            >
                                                <div className="quality-title">–í—ã—Å–æ–∫–æ–µ</div>
                                                <div className="quality-desc">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∑–≤—É–∫–∞</div>
                                                <div className="quality-specs">48 –∫–ì—Ü, 256 kbps, 100 –º—Å</div>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            )}

                            {/* –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º */}
                            {audioSettingsStore.settingsMode === 'detailed' && (
                                <>
                                    {/* –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
                                <div className="setting-group">
                                    <label className="setting-label">
                                        <span>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</span>
                                            <span className="setting-description">–ë–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–≤—É–∫–∞</span>
                                    </label>
                                    <div className="setting-control">
                                        <div className="checkbox-group">
                                            <label className="checkbox-label">
                                                <input
                                                    type="checkbox"
                                                    checked={audioSettingsStore.echoCancellation}
                                                    onChange={(e) => audioSettingsStore.setEchoCancellation(e.target.checked)}
                                                />
                                                <span>–ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ —ç—Ö–∞</span>
                                                    <span className="checkbox-description">–£–±–∏—Ä–∞–µ—Ç —ç—Ö–æ –∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å</span>
                                            </label>
                                            <label className="checkbox-label">
                                                <input
                                                    type="checkbox"
                                                    checked={audioSettingsStore.noiseSuppression}
                                                    onChange={(e) => audioSettingsStore.setNoiseSuppression(e.target.checked)}
                                                />
                                                <span>–®—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ</span>
                                                    <span className="checkbox-description">–£–±–∏—Ä–∞–µ—Ç —Ñ–æ–Ω–æ–≤—ã–µ —à—É–º—ã</span>
                                            </label>
                                            <label className="checkbox-label">
                                                <input
                                                    type="checkbox"
                                                    checked={audioSettingsStore.autoGainControl}
                                                    onChange={(e) => audioSettingsStore.setAutoGainControl(e.target.checked)}
                                                />
                                                <span>–ê–≤—Ç–æ–∫–æ–Ω—Ç—Ä–æ–ª—å –≥—Ä–æ–º–∫–æ—Å—Ç–∏</span>
                                                    <span className="checkbox-description">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∑–≤—É–∫–∞</span>
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                    {/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã */}
                                    <div className="setting-group">
                                        <label className="setting-label">
                                            <span>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</span>
                                            <span className="setting-description">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</span>
                                        </label>
                                        <div className="setting-control">
                                            <div className="slider-group">
                                                <div className="slider-item">
                                                    <label>–ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏</label>
                                                    <input
                                                        type="range"
                                                        min="8000"
                                                        max="48000"
                                                        step="8000"
                                                        value={audioSettingsStore.sampleRate}
                                                        onChange={(e) => audioSettingsStore.setSampleRate(Number(e.target.value))}
                                                        className="settings-slider"
                                                    />
                                                    <span className="slider-value">{audioSettingsStore.sampleRate} –ì—Ü</span>
                                                    <span className="slider-description">–í—ã—à–µ = –ª—É—á—à–µ –∫–∞—á–µ—Å—Ç–≤–æ, –±–æ–ª—å—à–µ —Ç—Ä–∞—Ñ–∏–∫–∞</span>
                                                </div>
                                                <div className="slider-item">
                                                    <label>–ë–∏—Ç—Ä–µ–π—Ç</label>
                                                    <input
                                                        type="range"
                                                        min="64"
                                                        max="320"
                                                        step="32"
                                                        value={audioSettingsStore.bitrate}
                                                        onChange={(e) => audioSettingsStore.setBitrate(Number(e.target.value))}
                                                        className="settings-slider"
                                                    />
                                                    <span className="slider-value">{audioSettingsStore.bitrate} kbps</span>
                                                    <span className="slider-description">–ö–∞—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–∞—á–∏ –∑–≤—É–∫–∞</span>
                                                </div>
                                                <div className="slider-item">
                                                    <label>–ó–∞–¥–µ—Ä–∂–∫–∞</label>
                                                    <input
                                                        type="range"
                                                        min="50"
                                                        max="1000"
                                                        step="50"
                                                        value={audioSettingsStore.latency}
                                                        onChange={(e) => audioSettingsStore.setLatency(Number(e.target.value))}
                                                        className="settings-slider"
                                                    />
                                                    <span className="slider-value">{audioSettingsStore.latency} –º—Å</span>
                                                    <span className="slider-description">–ú–µ–Ω—å—à–µ = –±—ã—Å—Ç—Ä–µ–µ –æ—Ç–∫–ª–∏–∫</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </>
                            )}
                        </div>
                    </div>
                )}

                {activeSection === 'advanced' && (
                    <div className="settings-card">
                        <div className="card-header">
                            <div className="header-content">
                                <div className="icon-container">üéõÔ∏è</div>
                                <div className="header-text">
                                    <h3>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–≤—É–∫–∞</h3>
                                    <p>–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–æ–Ω–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∑–≤—É–∫–∞</p>
                                </div>
                            </div>
                        </div>
                        <div className="card-content">
                            {/* –£–ª—É—á—à–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞ */}
                            <div className="setting-group">
                                <label className="setting-label">
                                    <span>–£–ª—É—á—à–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞</span>
                                    <span className="setting-description">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —á–µ—Ç–∫–æ—Å—Ç–∏ –≥–æ–ª–æ—Å–∞</span>
                                </label>
                                <div className="setting-control">
                                    <div className="checkbox-group">
                                        <label className="checkbox-label">
                                            <input
                                                type="checkbox"
                                                checked={audioSettingsStore.voiceEnhancement}
                                                onChange={(e) => audioSettingsStore.setVoiceEnhancement(e.target.checked)}
                                            />
                                            <span>–£–ª—É—á—à–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞</span>
                                            <span className="checkbox-description">–û–±—â–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≥–æ–ª–æ—Å–∞</span>
                                        </label>
                                        <label className="checkbox-label">
                                            <input
                                                type="checkbox"
                                                checked={audioSettingsStore.voiceIsolation}
                                                onChange={(e) => audioSettingsStore.setVoiceIsolation(e.target.checked)}
                                            />
                                            <span>–ò–∑–æ–ª—è—Ü–∏—è –≥–æ–ª–æ—Å–∞</span>
                                            <span className="checkbox-description">–í—ã–¥–µ–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –≥–æ–ª–æ—Å–æ–≤—ã–µ —á–∞—Å—Ç–æ—Ç—ã</span>
                                        </label>
                                    </div>
                                </div>
                            </div>

                            {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–≤—É–∫–∞ */}
                            <div className="setting-group">
                                <label className="setting-label">
                                    <span>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–≤—É–∫–∞</span>
                                    <span className="setting-description">–¢–æ–Ω–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏</span>
                                </label>
                                <div className="setting-control">
                                    <div className="slider-group">
                                        <div className="slider-item">
                                            <label>–ß–µ—Ç–∫–æ—Å—Ç—å –≥–æ–ª–æ—Å–∞</label>
                                    <input
                                        type="range"
                                        min="0"
                                        max="100"
                                        value={audioSettingsStore.voiceClarity * 100}
                                        onChange={(e) => audioSettingsStore.setVoiceClarity(Number(e.target.value) / 100)}
                                        className="settings-slider"
                                    />
                                    <span className="slider-value">{Math.round(audioSettingsStore.voiceClarity * 100)}%</span>
                                            <span className="slider-description">–£–ª—É—á—à–∞–µ—Ç —Ä–∞–∑–±–æ—Ä—á–∏–≤–æ—Å—Ç—å —Ä–µ—á–∏</span>
                                </div>
                                        <div className="slider-item">
                                            <label>–°–Ω–∏–∂–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–≥–æ —à—É–º–∞</label>
                                    <input
                                        type="range"
                                        min="0"
                                        max="100"
                                        value={audioSettingsStore.backgroundNoiseReduction * 100}
                                        onChange={(e) => audioSettingsStore.setBackgroundNoiseReduction(Number(e.target.value) / 100)}
                                        className="settings-slider"
                                    />
                                    <span className="slider-value">{Math.round(audioSettingsStore.backgroundNoiseReduction * 100)}%</span>
                                            <span className="slider-description">–£–±–∏—Ä–∞–µ—Ç —Ñ–æ–Ω–æ–≤—ã–µ –∑–≤—É–∫–∏</span>
                                </div>
                                        <div className="slider-item">
                                            <label>–£—Å–∏–ª–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞</label>
                                    <input
                                        type="range"
                                        min="0"
                                        max="100"
                                        value={audioSettingsStore.voiceBoost * 100}
                                        onChange={(e) => audioSettingsStore.setVoiceBoost(Number(e.target.value) / 100)}
                                        className="settings-slider"
                                    />
                                    <span className="slider-value">{Math.round(audioSettingsStore.voiceBoost * 100)}%</span>
                                            <span className="slider-description">–£—Å–∏–ª–∏–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ —á–∞—Å—Ç–æ—Ç—ã</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            {/* –≠–∫–≤–∞–ª–∞–π–∑–µ—Ä */}
                            <div className="setting-group">
                                <label className="setting-label">
                                    <span>–≠–∫–≤–∞–ª–∞–π–∑–µ—Ä</span>
                                    <span className="setting-description">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å—Ç–æ—Ç–Ω–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∑–≤—É–∫–∞</span>
                                </label>
                                <div className="setting-control">
                                    <div className="slider-group">
                                        <div className="slider-item">
                                            <label>–£—Å–∏–ª–µ–Ω–∏–µ –±–∞—Å–æ–≤</label>
                                            <input
                                                type="range"
                                                min="0"
                                                max="100"
                                                value={audioSettingsStore.bassBoost * 100}
                                                onChange={(e) => audioSettingsStore.setBassBoost(Number(e.target.value) / 100)}
                                                className="settings-slider"
                                            />
                                            <span className="slider-value">{Math.round(audioSettingsStore.bassBoost * 100)}%</span>
                                            <span className="slider-description">–£—Å–∏–ª–∏–≤–∞–µ—Ç –Ω–∏–∑–∫–∏–µ —á–∞—Å—Ç–æ—Ç—ã</span>
                                        </div>
                                        <div className="slider-item">
                                            <label>–£—Å–∏–ª–µ–Ω–∏–µ –≤—ã—Å–æ–∫–∏—Ö —á–∞—Å—Ç–æ—Ç</label>
                                            <input
                                                type="range"
                                                min="0"
                                                max="100"
                                                value={audioSettingsStore.trebleBoost * 100}
                                                onChange={(e) => audioSettingsStore.setTrebleBoost(Number(e.target.value) / 100)}
                                                className="settings-slider"
                                            />
                                            <span className="slider-value">{Math.round(audioSettingsStore.trebleBoost * 100)}%</span>
                                            <span className="slider-description">–£—Å–∏–ª–∏–≤–∞–µ—Ç –≤—ã—Å–æ–∫–∏–µ —á–∞—Å—Ç–æ—Ç—ã</span>
                                        </div>
                                        <div className="slider-item">
                                            <label>–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Å–∂–∞—Ç–∏–µ</label>
                                            <input
                                                type="range"
                                                min="0"
                                                max="100"
                                                value={audioSettingsStore.dynamicRangeCompression * 100}
                                                onChange={(e) => audioSettingsStore.setDynamicRangeCompression(Number(e.target.value) / 100)}
                                                className="settings-slider"
                                            />
                                            <span className="slider-value">{Math.round(audioSettingsStore.dynamicRangeCompression * 100)}%</span>
                                            <span className="slider-description">–í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –≥—Ä–æ–º–∫–æ—Å—Ç—å</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */}
                            <div className="setting-group">
                                <label className="setting-label">
                                    <span>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã</span>
                                    <span className="setting-description">–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∑–≤—É—á–∞–Ω–∏—è</span>
                                </label>
                                <div className="setting-control">
                                    <div className="checkbox-group">
                                        <label className="checkbox-label">
                                            <input
                                                type="checkbox"
                                                checked={audioSettingsStore.stereoEnhancement}
                                                onChange={(e) => audioSettingsStore.setStereoEnhancement(e.target.checked)}
                                            />
                                            <span>–°—Ç–µ—Ä–µ–æ —É–ª—É—á—à–µ–Ω–∏–µ</span>
                                            <span className="checkbox-description">–£–ª—É—á—à–∞–µ—Ç —Å—Ç–µ—Ä–µ–æ —ç—Ñ—Ñ–µ–∫—Ç</span>
                                        </label>
                                        <label className="checkbox-label">
                                            <input
                                                type="checkbox"
                                                checked={audioSettingsStore.spatialAudio}
                                                onChange={(e) => audioSettingsStore.setSpatialAudio(e.target.checked)}
                                            />
                                            <span>–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–≤—É–∫</span>
                                            <span className="checkbox-description">–°–æ–∑–¥–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç –æ–±—ä–µ–º–Ω–æ–≥–æ –∑–≤—É—á–∞–Ω–∏—è</span>
                                        </label>
                                    </div>
                                </div>
                            </div>

                            {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ */}
                            <div className="setting-group">
                                <label className="setting-label">
                                    <span>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</span>
                                    <span className="setting-description">–°–±—Ä–æ—Å –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ</span>
                                </label>
                                <div className="setting-control">
                                    <div className="button-group">
                                        <button 
                                            className="settings-button settings-button--reset"
                                            onClick={() => {
                                                audioSettingsStore.setAudioQuality('medium');
                                                audioSettingsStore.setSettingsMode('simple');
                                            }}
                                        >
                                            üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫ —É–º–æ–ª—á–∞–Ω–∏—é
                                        </button>
                                        <button 
                                            className="settings-button settings-button--test"
                                            onClick={() => audioSettingsStore.testMicrophone()}
                                        >
                                            üé§ –¢–µ—Å—Ç –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
                                        </button>
                                        <button 
                                            className="settings-button settings-button--test"
                                            onClick={() => audioSettingsStore.testSpeakers()}
                                        >
                                            üîä –¢–µ—Å—Ç –¥–∏–Ω–∞–º–∏–∫–æ–≤
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
});

export default AudioSettings;

